//思ったより初期処理とかstoryが多くなったのでまとめたやつ
//これに伴って各modのstoryが消滅したのでそれらのファイルは削除して大丈夫です(上書き用に残してあるだけ)
story modtumeawase_story
{
	if (yet(modtumeawase_syokisyori_ver1.04) && SWITCHop!=0) {event(modtumeawase_syokisyori_ver1.04)}
	if (isnewturn()) {
		//キャッシュの最適化処理　数が少ないからあまり意味がないかもしれない
		setv(@sikibetusiidxunit,ObjectiveautoCCmod_cache_class)
		addv(@sikibetusiidxunit,ObjectiveautoCCmod_cache_unit)
		routine(sikibetusi_hozon_index_main)
		//ターンを跨ぐとフィルターリセット
		routine(filtermod_reset)
		
		if (loyaltyOFFskillchange==1) {
			routine(loyaltyOFFskillchange_eraseelation3)
		}
	}
	
	//領地のマーキング解除
	if (filtermod_spotmark==1 && isplayerend()) {
		set(filtermod_spotmark,0)
		spotmark()
	}

	if (yet(addclasslistmodspotantiguide) && ismaster(hikari)) {event(addclasslistmodspotantiguide)}

	//サブイベのやつみたいな常に監視して置き換えしなきゃいけない内政ユニットの置き換え処理
	//以下置き換えのルール
	//1.置き換え先のユニット識別子は「元ユニット名+_kaihen」の形をとること
	//2.上から順にpolitics1,politics2,camp1の処理
	//modchangeunit_memory_(スポット名)のスキルセットに対象ユニットを入れておくこと
	//3.detailは継承されないので説明文があるやつはちゃんと書き写すこと

	setv(@modchangetargetspot,politics1)
	routine(modchangeunit_routine)

	setv(@modchangetargetspot,politics2)
	routine(modchangeunit_routine)

	setv(@modchangetargetspot,camp1)
	routine(modchangeunit_routine)

	clear(@modchangetargetspot) clear(@modchangeunit2)
	
	routine(LoyaldownONOFF_addunit)
}

event modtumeawase_syokisyori_ver1.04
{
	if (filtermod_filtered_Ecard!=0) {
		set(filtermod_filtered_skill,filtermod_filtered_Ecard)
		if (filtermod_filtered_Ecard<1102) {
			setud(@modtumeawase,energycard)
		}
		else {
			setud(@modtumeawase,ccpass)
			sub(filtermod_filtered_skill,2)
		}
		setud(filtermod_filtered_selectedskill,@modtumeawase)
		set(filtermod_filtered_Ecard,0)
		clear(@modtumeawase)
	}

	if (yet(addclasslistmodspot_main_ver1.03)) {event(addclasslistmodspot_main_ver1.03)}
	
	if (ismaster(@nekoplay)) {
		if (yet(filtermod_unitchange_main)) {event(filtermod_unitchange_main)}
		if (yet(objectiveautoCCmod_addunit_1.04)) {event(objectiveautoCCmod_addunit_1.04)}
		if (yet(modtumeawase_addallGimmickUnit)) {event(modtumeawase_addallGimmickUnit)}
		if (yet(loyaltyOFFskillchange_ONOFF)) {event(loyaltyOFFskillchange_ONOFF)}
	}
}

event modtumeawase_addallGimmickUnit
{
	//各種処理で削除しない内政ユニットへの追加と削除の処理(削除は別にしなくても動く)
	//politics1にユニットを追加する場合に必須
	storeud(SAVEallGimmickUnit,@modtumeawase)

	subv(@modtumeawase,004drop99empty1) subv(@modtumeawase,004drop99empty2) subv(@modtumeawase,004drop99empty3)
	subv(@modtumeawase,011autoChange)

	addv(@modtumeawase,003wwwdroplevel) addv(@modtumeawase,003wwwdropEcard) addv(@modtumeawase,003wwwdropreset)
	addv(@modtumeawase,011autoChange_kaihen)

	setud(SAVEallGimmickUnit,@modtumeawase)

	clear(@modtumeawase)
}

event modchangeunit_routine
{
	setv(@modchangeunit3,modchangeunit_memory_)
	addstr(@modchangeunit3,@modchangetargetspot)
	storeskillset(@modchangeunit3,@modchangeunit)

	clear(@modchangeunit3)

	while (@modchangeunit!=0) {
		index(@modchangeunit,0,@modchangeunit2) subv(@modchangeunit,@modchangeunit2)
		if (inspot(@modchangetargetspot,@modchangeunit2)!=0) {
			eraseunit2(@modchangetargetspot,@modchangeunit2)
			eraseunit(@modchangeunit2)
			addv(@modchangeunit3,@modchangeunit2)
			addstr(@modchangeunit2,_kaihen)
			addunit(@modchangeunit2,@modchangetargetspot)
		}
	}

	if (@modchangeunit3!=0 && @modchangetargetspot==politics1) {
		storeud(SAVEallGimmickUnit,@modchangeunit)
		while (@modchangeunit3!=0) {
			index(@modchangeunit3,0,@modchangeunit2) subv(@modchangeunit3,@modchangeunit2)
			
			subv(@modchangeunit,@modchangeunit2)
			addstr(@modchangeunit2,_kaihen)
			addv(@modchangeunit,@modchangeunit2)
		}
		setud(SAVEallGimmickUnit, @modchangeunit)
	}
}

skillset modchangeunit_memory_politics1
{
	member=@
}

skillset modchangeunit_memory_politics2
{
	member=z11SUBEVON1,z12SUBEVON2,z13SUBEVON3,z14SUBEVON4,z15SUBEVON5,z16SUBEVON6,z17SUBEVON7
}

skillset modchangeunit_memory_camp1
{
	member=@
}